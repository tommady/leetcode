#! /bin/bash 
title_slug=$(bb "$1" -s -l -t -)
request_json=$( jq -n \
  --arg ts "$title_slug" \
  '{"operationName": "getQuestionDetail","variables": {"titleSlug": $ts},"query": "query getQuestionDetail($titleSlug: String!) {question(titleSlug: $titleSlug) {questionFrontendId\ncontent\ncodeDefinition}}"}')

response_json=$( echo $request_json | http POST https://leetcode.com/graphql )
response_json=$( echo $response_json | sd '<[^>]*>' '' )
response_json=$( echo $response_json | sd '&[\w]+;' ' ' )
response_json=$( echo $response_json | sd '\\r\\n' '\\\\n// ' )

code_definition=$( echo $response_json | jq -r '.data.question.codeDefinition' )
question_frontend_id=$( echo $response_json | jq -r '.data.question.questionFrontendId' )
content=$( echo $response_json | jq -r '.data.question.content' )

for row in $( echo "${code_definition}" | jq -c -r '.[] | @base64' ); do
  _jq() {
    echo $row | base64 --decode | jq -r ${1}
  }
  
  a=$(_jq '.value')
  if [ $a == "rust" ]; then
    code_definition=$(_jq '.defaultCode')
    break
  fi
done

if [ -z "$code_definition" ]; then
  echo "this problem not support language: rust"
  exit 1
fi

title_slug=$(bb "$title_slug" -f - -t _)
file="./src/p${question_frontend_id}_${title_slug}.rs"
cp ./template.rs $file

sd "__PROBLEM_DESC__" "$content" $file
sd "__PROBLEM_DEFAULT_CODE__" "$code_definition" $file
sd "__PROBLEM_ID__" "$question_frontend_id" $file

rustfmt $file

echo "mod p${question_frontend_id}_${title_slug};" >> ./src/lib.rs
rustfmt ./src/lib.rs
