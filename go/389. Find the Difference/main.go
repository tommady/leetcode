package main

import "log"

// Given two strings s and t which consist of only lowercase letters.

// String t is generated by random shuffling string s and then add one more letter at a random position.

// Find the letter that was added in t.

// Example:

// Input:
// s = "abcd"
// t = "abcde"

// Output:
// e

// Explanation:
// 'e' is the letter that was added.

func findTheDifference(s string, t string) byte {
	sm := make(map[rune]int)
	for _, w := range s {
		sm[w]++
	}
	tm := make(map[rune]int)
	for _, w := range t {
		tm[w]++
	}

	var ret byte
	for sw, sc := range tm {
		if tc, exist := sm[sw]; !exist || tc != sc {
			ret = byte(sw)
			break
		}
	}

	return ret
}

func main() {
	testCases := []struct {
		description string
		input1      string
		input2      string
		expect      byte
	}{
		{
			description: "testing 1",
			input1:      "abcd",
			input2:      "abcde",
			expect:      'e',
		},
		{
			description: "testing 2",
			input1:      "a",
			input2:      "aa",
			expect:      'a',
		},
	}

	for _, tt := range testCases {
		actual := findTheDifference(tt.input1, tt.input2)
		if tt.expect != actual {
			log.Fatalf("%s: expect:%v != actual:%v", tt.description, tt.expect, actual)
		}
	}
}
